import{_ as p,r as a,o as c,c as l,b as n,d as e,e as s,w as r,a as o}from"./app-304f5532.js";const d={},u=n("h1",{id:"http组件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#http组件","aria-hidden":"true"},"#"),e(" http组件")],-1),v=n("h2",{id:"_1-什么是http",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-什么是http","aria-hidden":"true"},"#"),e(" 1.什么是HTTP")],-1),m={class:"theorem"},k=n("p",{class:"title"},"远程过程调用",-1),h=n("p",null,"超文本传输协议（英语：HyperText Transfer Protocol，缩写：HTTP）是一种用于分布式、 协作式和超媒体信息系统的应用层协议。HTTP是万维网的数据通信的基础。",-1),b=n("p",null,"设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。通过HTTP或者HTTPS协议请求的资源由统一资源标识符 （Uniform Resource Identifiers，URI）来标识。",-1),g=n("p",null,"HTTP是一个客户端（用户）和服务端（网站）之间请求和应答的标准，通常使用TCP协议。通过使用网页浏览器、网络爬虫或者其它的工具， 客户端发起一个HTTP请求到服务器上指定端口（默认端口为80）。我们称这个客户端为用户代理程序（user agent）。 应答的服务器上存储着一些资源，比如HTML文件和图像。我们称这个应答服务器为源服务器（origin server）。 在用户代理和源服务器中间可能存在多个“中间层”，比如代理服务器、网关或者隧道（tunnel）。",-1),T={class:"custom-container right"},B={href:"https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"},C=n("h2",{id:"_2-为什么选择fasthttp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-为什么选择fasthttp","aria-hidden":"true"},"#"),e(" 2.为什么选择fasthttp")],-1),P={class:"theorem"},_=n("p",{class:"title"},null,-1),G={id:"http-server-performance-comparison-with-net-http",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#http-server-performance-comparison-with-net-http","aria-hidden":"true"},"#",-1),q={href:"https://pkg.go.dev/net/http",target:"_blank",rel:"noopener noreferrer"},f=o(`<p>In short, fasthttp server is up to 10 times faster than net/http. Below are benchmark results.</p><p><em>GOMAXPROCS=1</em></p><p>net/http server:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ GOMAXPROCS=1 go test -bench=NetHTTPServerGet -benchmem -benchtime=10s
BenchmarkNetHTTPServerGet1ReqPerConn                	 1000000	     12052 ns/op	    2297 B/op	      29 allocs/op
BenchmarkNetHTTPServerGet2ReqPerConn                	 1000000	     12278 ns/op	    2327 B/op	      24 allocs/op
BenchmarkNetHTTPServerGet10ReqPerConn               	 2000000	      8903 ns/op	    2112 B/op	      19 allocs/op
BenchmarkNetHTTPServerGet10KReqPerConn              	 2000000	      8451 ns/op	    2058 B/op	      18 allocs/op
BenchmarkNetHTTPServerGet1ReqPerConn10KClients      	  500000	     26733 ns/op	    3229 B/op	      29 allocs/op
BenchmarkNetHTTPServerGet2ReqPerConn10KClients      	 1000000	     23351 ns/op	    3211 B/op	      24 allocs/op
BenchmarkNetHTTPServerGet10ReqPerConn10KClients     	 1000000	     13390 ns/op	    2483 B/op	      19 allocs/op
BenchmarkNetHTTPServerGet100ReqPerConn10KClients    	 1000000	     13484 ns/op	    2171 B/op	      18 allocs/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fasthttp server:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ GOMAXPROCS=1 go test -bench=kServerGet -benchmem -benchtime=10s
BenchmarkServerGet1ReqPerConn                       	10000000	      1559 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet2ReqPerConn                       	10000000	      1248 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet10ReqPerConn                      	20000000	       797 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet10KReqPerConn                     	20000000	       716 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet1ReqPerConn10KClients             	10000000	      1974 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet2ReqPerConn10KClients             	10000000	      1352 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet10ReqPerConn10KClients            	20000000	       789 ns/op	       2 B/op	       0 allocs/op
BenchmarkServerGet100ReqPerConn10KClients           	20000000	       604 ns/op	       0 B/op	       0 allocs/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>GOMAXPROCS=4</em></p><p>net/http server:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ GOMAXPROCS=4 go test -bench=NetHTTPServerGet -benchmem -benchtime=10s
BenchmarkNetHTTPServerGet1ReqPerConn-4                  	 3000000	      4529 ns/op	    2389 B/op	      29 allocs/op
BenchmarkNetHTTPServerGet2ReqPerConn-4                  	 5000000	      3896 ns/op	    2418 B/op	      24 allocs/op
BenchmarkNetHTTPServerGet10ReqPerConn-4                 	 5000000	      3145 ns/op	    2160 B/op	      19 allocs/op
BenchmarkNetHTTPServerGet10KReqPerConn-4                	 5000000	      3054 ns/op	    2065 B/op	      18 allocs/op
BenchmarkNetHTTPServerGet1ReqPerConn10KClients-4        	 1000000	     10321 ns/op	    3710 B/op	      30 allocs/op
BenchmarkNetHTTPServerGet2ReqPerConn10KClients-4        	 2000000	      7556 ns/op	    3296 B/op	      24 allocs/op
BenchmarkNetHTTPServerGet10ReqPerConn10KClients-4       	 5000000	      3905 ns/op	    2349 B/op	      19 allocs/op
BenchmarkNetHTTPServerGet100ReqPerConn10KClients-4      	 5000000	      3435 ns/op	    2130 B/op	      18 allocs/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fasthttp server:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ GOMAXPROCS=4 go test -bench=kServerGet -benchmem -benchtime=10s
BenchmarkServerGet1ReqPerConn-4                         	10000000	      1141 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet2ReqPerConn-4                         	20000000	       707 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet10ReqPerConn-4                        	30000000	       341 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet10KReqPerConn-4                       	50000000	       310 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet1ReqPerConn10KClients-4               	10000000	      1119 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet2ReqPerConn10KClients-4               	20000000	       644 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet10ReqPerConn10KClients-4              	30000000	       346 ns/op	       0 B/op	       0 allocs/op
BenchmarkServerGet100ReqPerConn10KClients-4             	50000000	       282 ns/op	       0 B/op	       0 allocs/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="http-client-comparison-with-net-http" tabindex="-1"><a class="header-anchor" href="#http-client-comparison-with-net-http" aria-hidden="true">#</a> HTTP client comparison with net/http</h2><p>In short, fasthttp client is up to 10 times faster than net/http. Below are benchmark results.</p><p><em>GOMAXPROCS=1</em></p><p>net/http client:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ GOMAXPROCS=1 go test -bench=&#39;HTTPClient(Do|GetEndToEnd)&#39; -benchmem -benchtime=10s
BenchmarkNetHTTPClientDoFastServer                  	 1000000	     12567 ns/op	    2616 B/op	      35 allocs/op
BenchmarkNetHTTPClientGetEndToEnd1TCP               	  200000	     67030 ns/op	    5028 B/op	      56 allocs/op
BenchmarkNetHTTPClientGetEndToEnd10TCP              	  300000	     51098 ns/op	    5031 B/op	      56 allocs/op
BenchmarkNetHTTPClientGetEndToEnd100TCP             	  300000	     45096 ns/op	    5026 B/op	      55 allocs/op
BenchmarkNetHTTPClientGetEndToEnd1Inmemory          	  500000	     24779 ns/op	    5035 B/op	      57 allocs/op
BenchmarkNetHTTPClientGetEndToEnd10Inmemory         	 1000000	     26425 ns/op	    5035 B/op	      57 allocs/op
BenchmarkNetHTTPClientGetEndToEnd100Inmemory        	  500000	     28515 ns/op	    5045 B/op	      57 allocs/op
BenchmarkNetHTTPClientGetEndToEnd1000Inmemory       	  500000	     39511 ns/op	    5096 B/op	      56 allocs/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fasthttp client:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ GOMAXPROCS=1 go test -bench=&#39;kClient(Do|GetEndToEnd)&#39; -benchmem -benchtime=10s
BenchmarkClientDoFastServer                         	20000000	       865 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd1TCP                      	 1000000	     18711 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd10TCP                     	 1000000	     14664 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd100TCP                    	 1000000	     14043 ns/op	       1 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd1Inmemory                 	 5000000	      3965 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd10Inmemory                	 3000000	      4060 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd100Inmemory               	 5000000	      3396 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd1000Inmemory              	 5000000	      3306 ns/op	       2 B/op	       0 allocs/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>GOMAXPROCS=4</em></p><p>net/http client:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ GOMAXPROCS=4 go test -bench=&#39;HTTPClient(Do|GetEndToEnd)&#39; -benchmem -benchtime=10s
BenchmarkNetHTTPClientDoFastServer-4                    	 2000000	      8774 ns/op	    2619 B/op	      35 allocs/op
BenchmarkNetHTTPClientGetEndToEnd1TCP-4                 	  500000	     22951 ns/op	    5047 B/op	      56 allocs/op
BenchmarkNetHTTPClientGetEndToEnd10TCP-4                	 1000000	     19182 ns/op	    5037 B/op	      55 allocs/op
BenchmarkNetHTTPClientGetEndToEnd100TCP-4               	 1000000	     16535 ns/op	    5031 B/op	      55 allocs/op
BenchmarkNetHTTPClientGetEndToEnd1Inmemory-4            	 1000000	     14495 ns/op	    5038 B/op	      56 allocs/op
BenchmarkNetHTTPClientGetEndToEnd10Inmemory-4           	 1000000	     10237 ns/op	    5034 B/op	      56 allocs/op
BenchmarkNetHTTPClientGetEndToEnd100Inmemory-4          	 1000000	     10125 ns/op	    5045 B/op	      56 allocs/op
BenchmarkNetHTTPClientGetEndToEnd1000Inmemory-4         	 1000000	     11132 ns/op	    5136 B/op	      56 allocs/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fasthttp client:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ GOMAXPROCS=4 go test -bench=&#39;kClient(Do|GetEndToEnd)&#39; -benchmem -benchtime=10s
BenchmarkClientDoFastServer-4                           	50000000	       397 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd1TCP-4                        	 2000000	      7388 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd10TCP-4                       	 2000000	      6689 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd100TCP-4                      	 3000000	      4927 ns/op	       1 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd1Inmemory-4                   	10000000	      1604 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd10Inmemory-4                  	10000000	      1458 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd100Inmemory-4                 	10000000	      1329 ns/op	       0 B/op	       0 allocs/op
BenchmarkClientGetEndToEnd1000Inmemory-4                	10000000	      1316 ns/op	       5 B/op	       0 allocs/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),S={class:"custom-container right"},R={href:"https://github.com/valyala/fasthttp",target:"_blank",rel:"noopener noreferrer"},H=n("h2",{id:"_3-如何使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-如何使用","aria-hidden":"true"},"#"),e(" 3.如何使用")],-1),x={class:"custom-container tip"},w=n("p",{class:"custom-container-title"},"提示",-1),y=o(`<h3 id="_3-1-启动" tabindex="-1"><a class="header-anchor" href="#_3-1-启动" aria-hidden="true">#</a> 3.1 启动</h3><p>在<code>application/httpserver.go</code>中提供了<code>initHttpServer</code>方法进行服务初始化。 调用<code>Server</code>方法即可启动服务。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 可参考 http服务 cmd/api/server.go:95</span>
application<span class="token punctuation">.</span><span class="token function">HttpServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Server</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-控制器" tabindex="-1"><a class="header-anchor" href="#_3-2-控制器" aria-hidden="true">#</a> 3.2 控制器</h3><p>实现一个控制器</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> auth

<span class="token keyword">type</span> AuthController <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    http<span class="token punctuation">.</span>HttpController
<span class="token punctuation">}</span>

<span class="token comment">// Login</span>
<span class="token comment">// @Summary 登录</span>
<span class="token comment">// @Description 用户登录</span>
<span class="token comment">// @Tags 基础模块|用户登录登出</span>
<span class="token comment">// @Param deptName body auth.LoginParams true &quot;登录参数&quot;</span>
<span class="token comment">// @Success 200 {object} auth.LoginResp &quot;{&quot;code&quot;: 200, &quot;data&quot;: [...]}&quot;</span>
<span class="token comment">// @Router /api/login [post]</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>AuthController<span class="token punctuation">)</span> <span class="token function">Login</span><span class="token punctuation">(</span>c <span class="token operator">*</span>routing<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> application<span class="token punctuation">.</span><span class="token function">SRpcCall</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> rpcserver<span class="token punctuation">.</span>AuthServer<span class="token punctuation">,</span> rpcserver<span class="token punctuation">.</span>AuthFuncLogin<span class="token punctuation">,</span> <span class="token function">new</span><span class="token punctuation">(</span>auth2<span class="token punctuation">.</span>LoginParams<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">new</span><span class="token punctuation">(</span>auth2<span class="token punctuation">.</span>LoginResp<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-路由" tabindex="-1"><a class="header-anchor" href="#_3-3-路由" aria-hidden="true">#</a> 3.3 路由</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> auth

<span class="token keyword">func</span> <span class="token function">InitAuthRoute</span><span class="token punctuation">(</span>baseRouter <span class="token operator">*</span>routing<span class="token punctuation">.</span>RouteGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	authHandler <span class="token operator">:=</span> auth<span class="token punctuation">.</span>AuthController<span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token comment">// 登录登出</span>
	baseRouter<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> authHandler<span class="token punctuation">.</span>Login<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-swagger文档" tabindex="-1"><a class="header-anchor" href="#_3-4-swagger文档" aria-hidden="true">#</a> 3.4 swagger文档</h3><p>示例：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Login</span>
<span class="token comment">// @Summary 登录</span>
<span class="token comment">// @Description 用户登录</span>
<span class="token comment">// @Tags 基础模块|用户登录登出</span>
<span class="token comment">// @Param deptName body auth.LoginParams true &quot;登录参数&quot;</span>
<span class="token comment">// @Success 200 {object} auth.LoginResp &quot;{&quot;code&quot;: 200, &quot;data&quot;: [...]}&quot;</span>
<span class="token comment">// @Router /api/login [post]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-中间件" tabindex="-1"><a class="header-anchor" href="#_3-5-中间件" aria-hidden="true">#</a> 3.5 中间件</h3><h4 id="_3-5-1-系统默认中间件" tabindex="-1"><a class="header-anchor" href="#_3-5-1-系统默认中间件" aria-hidden="true">#</a> 3.5.1 系统默认中间件</h4><div class="custom-container tip"><p class="custom-container-title">提示</p><p>系统中间件默认启动，不能修改</p></div><ul><li><p><code>middlewareRequestLink</code>: 请求链路中间件，用于生成request_id，传递traceid，形成链路追踪。 代码参考：<code>server/http/middleware.go:36</code></p></li><li><p><code>middlewareCustomError</code>: panic中间件，用于捕获panic。 代码参考：<code>server/http/middleware.go:91</code></p></li><li><p><code>middlewareSentinel</code>: 限流中间件，用于限制接口访问频率。 代码参考：<code>server/http/middleware.go:108</code></p></li></ul><h4 id="_3-5-2-自定义中间件" tabindex="-1"><a class="header-anchor" href="#_3-5-2-自定义中间件" aria-hidden="true">#</a> 3.5.2 自定义中间件</h4><p>示例：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> middleware
<span class="token keyword">import</span> <span class="token punctuation">(</span>
	routing <span class="token string">&quot;github.com/gly-hub/fasthttp-routing&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">CorsMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span> routing<span class="token punctuation">.</span>Handler <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>routing<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Methods&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;POST, GET, OPTIONS, PUT, DELETE&quot;</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Type, Authorization&quot;</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Max-Age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;86400&quot;</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Credentials&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>

		<span class="token keyword">if</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">IsOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">Abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册中间件：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> auth

<span class="token keyword">func</span> <span class="token function">InitAuthRoute</span><span class="token punctuation">(</span>baseRouter <span class="token operator">*</span>routing<span class="token punctuation">.</span>RouteGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	baseRouter<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>middleware<span class="token punctuation">.</span><span class="token function">CorsMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	authHandler <span class="token operator">:=</span> auth<span class="token punctuation">.</span>AuthController<span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token comment">// 登录登出</span>
	baseRouter<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> authHandler<span class="token punctuation">.</span>Login<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function N(A,O){const t=a("ExternalLinkIcon"),i=a("RouterLink");return c(),l("div",null,[u,v,n("div",m,[k,h,b,g,n("div",T,[n("p",null,[e("来自 "),n("a",B,[e("维基百科"),s(t)])])])]),C,n("div",P,[_,n("h2",G,[E,e(" HTTP server performance comparison with "),n("a",q,[e("net/http"),s(t)])]),f,n("div",S,[n("p",null,[e("来自 "),n("a",R,[e("fasthttp"),s(t)])])])]),H,n("div",x,[w,n("p",null,[e("框架集成了http组件，只需要配置文件中配置 "),s(i,{to:"/zh/guide/baseconfig.html"},{default:r(()=>[e("http配置")]),_:1}),e("。")])]),y])}const K=p(d,[["render",N],["__file","http.html.vue"]]);export{K as default};
